name: AQL Tool CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sundays

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}
  PYTHON_VERSION: '3.11'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          hunspell \
          hunspell-en-us \
          hunspell-ar \
          libhunspell-dev \
          tesseract-ocr \
          tesseract-ocr-ara \
          tesseract-ocr-heb \
          tesseract-ocr-fas \
          tesseract-ocr-urd \
          tesseract-ocr-eng \
          python3-dev \
          python3-devel \
          python${{ matrix.python-version }}-dev \
          build-essential \
          pkg-config

    - name: Install Python dependencies
      run: |
        export CFLAGS="-I$(python -c 'import sysconfig; print(sysconfig.get_path("include"))')"
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install cython==3.0.12
        # Install cyhunspell separately first
        python -m pip install --no-binary :all: cyhunspell==1.3.4
        python -m pip install -r requirements.txt
        python -m pip install pytest pytest-cov pylint black mypy

    - name: Run tests with coverage
      run: |
        pytest --cov=app --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

    - name: Run linting
      run: |
        black --check app
        pylint app
        mypy app

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          hunspell \
          hunspell-en-us \
          hunspell-ar \
          libhunspell-dev \
          python3-dev \
          python3-devel \
          build-essential \
          pkg-config

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        export CFLAGS="-I$(python -c 'import sysconfig; print(sysconfig.get_path("include"))')"
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install cython==3.0.12
        # Install cyhunspell separately first
        python -m pip install --no-binary :all: cyhunspell==1.3.4
        python -m pip install -r requirements.txt

    # ... rest of the security job remains the same ...